// js/cart.js

let cartOverlay; // –ì–ª–æ–±–∞–ª—å–Ω–∞ –∑–º—ñ–Ω–Ω–∞ –¥–ª—è –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –æ–≤–µ—Ä–ª–µ–π
let cartItems = []; // –ó–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º –∫–æ—à–∏–∫ –ø–æ—Ä–æ–∂–Ω—ñ–π

// –¶—è —Ñ—É–Ω–∫—Ü—ñ—è –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è, –∫–æ–ª–∏ DOM –ø–æ–≤–Ω—ñ—Å—Ç—é –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∏–π
document.addEventListener('DOMContentLoaded', () => {
    // 1. –°—Ç–≤–æ—Ä—é—î–º–æ –µ–ª–µ–º–µ–Ω—Ç –æ–≤–µ—Ä–ª–µ—é (–Ω–∞–ø—ñ–≤–ø—Ä–æ–∑–æ—Ä–∏–π —Ñ–æ–Ω)
    cartOverlay = document.createElement('div');
    cartOverlay.classList.add('cart-overlay');
    document.body.appendChild(cartOverlay); // –î–æ–¥–∞—î–º–æ –π–æ–≥–æ –≤ –∫—ñ–Ω–µ—Ü—å <body>

    // 2. –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –∫–ª—ñ–∫—É –Ω–∞ –æ–≤–µ—Ä–ª–µ–π –¥–ª—è –∑–∞–∫—Ä–∏—Ç—Ç—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞
    cartOverlay.addEventListener('click', (event) => {
        // –Ø–∫—â–æ –∫–ª—ñ–∫ –±—É–≤ —Å–∞–º–µ –Ω–∞ –æ–≤–µ—Ä–ª–µ—ó, –∞ –Ω–µ –Ω–∞ –≤–º—ñ—Å—Ç—ñ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞
        if (event.target === cartOverlay) {
            closeCartModal();
        }
    });

    // –ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ –∫–Ω–æ–ø–∫—É "–î–æ–¥–∞—Ç–∏ –¥–æ –∫–æ—à–∏–∫–∞" –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ —Ç–æ–≤–∞—Ä—É
    const addToCartButton = document.querySelector('.add-to-cart');
    if (addToCartButton) {
        addToCartButton.addEventListener('click', () => {
            // –û—Ç—Ä–∏–º—É—î–º–æ –µ–ª–µ–º–µ–Ω—Ç product-details, —è–∫–∏–π –º—ñ—Å—Ç–∏—Ç—å data-–∞—Ç—Ä–∏–±—É—Ç–∏
            const productDetails = document.querySelector('.product-details');
            if (!productDetails) {
                console.error('–ï–ª–µ–º–µ–Ω—Ç .product-details –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ.');
                return;
            }

            // –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –ø—Ä–æ —Ç–æ–≤–∞—Ä –∑ data-–∞—Ç—Ä–∏–±—É—Ç—ñ–≤
            const productId = productDetails.dataset.productId;
            const productName = productDetails.dataset.productName;
            const productPrice = parseFloat(productDetails.dataset.productPrice); // –ü–µ—Ä–µ—Ç–≤–æ—Ä—é—î–º–æ –≤ —á–∏—Å–ª–æ
            const productImage = productDetails.dataset.productImage;

            const quantityInput = document.getElementById('quantity');
            const quantity = quantityInput ? parseInt(quantityInput.value) : 1;

            if (!productId || !productName || isNaN(productPrice) || !productImage) {
                console.error('–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –ø–æ–≤–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ —Ç–æ–≤–∞—Ä –∑ data-–∞—Ç—Ä–∏–±—É—Ç—ñ–≤.');
                return;
            }

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –≤–∂–µ —î —Ç–æ–≤–∞—Ä —É –∫–æ—à–∏–∫—É, —â–æ–± –æ–Ω–æ–≤–∏—Ç–∏ –∫—ñ–ª—å–∫—ñ—Å—Ç—å, –∞ –Ω–µ –¥–æ–¥–∞–≤–∞—Ç–∏ –∑–Ω–æ–≤—É
            const existingItemIndex = cartItems.findIndex(item => item.id === productId);

            if (existingItemIndex > -1) {
                cartItems[existingItemIndex].quantity += quantity;
            } else {
                cartItems.push({
                    id: productId,
                    name: productName,
                    price: productPrice,
                    image: productImage,
                    quantity: quantity
                });
            }

            alert(`–î–æ–¥–∞–Ω–æ –¥–æ –∫–æ—à–∏–∫–∞: ${quantity} x ${productName}!`);
            console.log("–ü–æ—Ç–æ—á–Ω–∏–π –∫–æ—à–∏–∫:", cartItems);
            openCartModal(); // –í—ñ–¥–∫—Ä–∏–≤–∞—î–º–æ –∫–æ—à–∏–∫ –ø—ñ—Å–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è
        });
    }

    // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è —ñ–∫–æ–Ω–∫–∏ –∫–æ—à–∏–∫–∞ –≤ —Ö–µ–¥–µ—Ä—ñ (–ø—Ä–∞—Ü—é—î –Ω–∞ –≤—Å—ñ—Ö —Å—Ç–æ—Ä—ñ–Ω–∫–∞—Ö, –¥–µ –ø—ñ–¥–∫–ª—é—á–µ–Ω–æ cart.js)
    const cartIcon = document.querySelector('.cart-icon');
    if (cartIcon) {
        cartIcon.addEventListener('click', openCartModal);
    }
});

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞ –∫–æ—à–∏–∫–∞
function openCartModal() {
    let cartContentHtml = '';

    if (cartItems.length === 0) {
        // –ö–æ—à–∏–∫ –ø–æ—Ä–æ–∂–Ω—ñ–π, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∑–∞—Ö–∞—Ä–¥–∫–æ–¥–∂–µ–Ω–∏–π HTML –¥–ª—è –ø–æ—Ä–æ–∂–Ω—å–æ–≥–æ –∫–æ—à–∏–∫–∞
        cartContentHtml = `
            <div class="cart-header">
                <h2>–ö–æ—à–∏–∫</h2>
                <button class="close-button" onclick="closeCartModal()">√ó</button>
            </div>
            <div class="empty-cart-message">
                <p>–í–∞—à –∫–æ—à–∏–∫ –ø–æ—Ä–æ–∂–Ω—ñ–π üòî</p>
                <p>–î–æ–¥–∞–π—Ç–µ —Ç–æ–≤–∞—Ä–∏, —â–æ–± –ø–æ—á–∞—Ç–∏ –ø–æ–∫—É–ø–∫–∏!</p>
                <button class="continue-shopping" onclick="closeCartModal()">–ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏ –ø–æ–∫—É–ø–∫–∏</button>
            </div>
            <section class="also-buy-section">
                <h2>–†–µ–∫–æ–º–µ–Ω–¥—É—î–º–æ –¥–æ –ø–æ–∫—É–ø–∫–∏</h2>
                <div class="also-buy-carousel">
                    <button class="carousel-arrow left-arrow">‚Äπ</button>
                    <div class="also-buy-items">
                        <div class="also-buy-item">
                            <div class="also-buy-img-wrapper">
                                <img src="image/mousepad_game.jpg" alt="–Ü–≥—Ä–æ–≤–∏–π –∫–∏–ª–∏–º–æ–∫">
                                <span class="discount-badge-small">-20%</span>
                            </div>
                            <p class="also-buy-name">–Ü–≥—Ä–æ–≤–∏–π –∫–∏–ª–∏–º–æ–∫ –¥–ª—è –º–∏—à—ñ HyperX Fury S Speed Edition XL (900x420x4–º–º)</p>
                            <span class="old-price-small">899 ‚Ç¥</span>
                            <span class="current-price-small">719 ‚Ç¥</span>
                        </div>
                        <span class="plus-sign">+</span>
                        <div class="also-buy-item">
                            <div class="also-buy-img-wrapper">
                                <img src="image/qk65v2.jpg" alt="–ù–∞–±—ñ—Ä —Å–≤—ñ—á—ñ–≤">
                            </div>
                            <p class="also-buy-name">–ù–∞–±—ñ—Ä —Å–≤—ñ—á—ñ–≤ Gateron Yellow Pro 2.0 (100 —à—Ç.)</p>
                            <span class="current-price-small">1200 ‚Ç¥</span>
                        </div>
                        <span class="plus-sign">+</span>
                        <div class="also-buy-item">
                            <div class="also-buy-img-wrapper">
                                <img src="image/power_adapter.jpg" alt="–ó–∞—Ä—è–¥–Ω–∏–π –ø—Ä–∏—Å—Ç—Ä—ñ–π">
                                <span class="discount-badge-small">-15%</span>
                            </div>
                            <p class="also-buy-name">–ó–∞—Ä—è–¥–Ω–∏–π –ø—Ä–∏—Å—Ç—Ä—ñ–π ArmorStandart AMHJ83 20 W USB-C Power Adapter (ARM58528)</p>
                            <span class="old-price-small">269 ‚Ç¥</span>
                            <span class="current-price-small">229 ‚Ç¥</span>
                        </div>
                    </div>
                    <button class="carousel-arrow right-arrow">‚Ä∫</button>
                </div>
                <div class="carousel-dots">
                    <span class="dot active"></span>
                    <span class="dot"></span>
                    <span class="dot"></span>
                </div>
            </section>
            <button class="continue-shopping" onclick="closeCartModal()">–ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏ –ø–æ–∫—É–ø–∫–∏</button>
        `;
        const modalContent = document.createElement('div');
        modalContent.classList.add('cart-modal');
        modalContent.innerHTML = cartContentHtml;
        cartOverlay.innerHTML = '';
        cartOverlay.appendChild(modalContent);

        cartOverlay.classList.add('active');
        document.body.style.overflow = 'hidden';

        setupCarousel(); // –ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ –∫–∞—Ä—É—Å–µ–ª—å –Ω–∞–≤—ñ—Ç—å –¥–ª—è –ø–æ—Ä–æ–∂–Ω—å–æ–≥–æ –∫–æ—à–∏–∫–∞
    } else {
        // –ö–æ—à–∏–∫ –ù–ï –ø–æ—Ä–æ–∂–Ω—ñ–π, –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –≤–º—ñ—Å—Ç –∑ cart-modal.html
        fetch('cart-modal.html')
            .then(response => {
                if (!response.ok) {
                    throw new Error('Failed to load cart content');
                }
                return response.text();
            })
            .then(html => {
                const modalContent = document.createElement('div');
                modalContent.classList.add('cart-modal');
                modalContent.innerHTML = html;

                const itemContainer = modalContent.querySelector('.cart-items-container');
                if (itemContainer) { // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ –∑–Ω–∞–π–¥–µ–Ω–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
                    itemContainer.innerHTML = ''; // –û—á–∏—â–∞—î–º–æ –≤–º—ñ—Å—Ç, —â–æ–± –¥–æ–¥–∞—Ç–∏ –∑ cartItems
                } else {
                    console.error('–ï–ª–µ–º–µ–Ω—Ç .cart-items-container –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ cart-modal.html');
                    return; // –í–∏—Ö–æ–¥–∏–º–æ, —è–∫—â–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ
                }

                let totalCartPrice = 0;

                cartItems.forEach(item => {
                    const itemHtml = `
                        <div class="cart-item" data-item-id="${item.id}">
                            <div class="item-img-wrapper">
                                <img src="${item.image}" alt="${item.name}" class="item-image">
                            </div>
                            <div class="item-details">
                                <p class="item-name">${item.name}</p>
                                <p class="item-vendor">–ü—Ä–æ–¥–∞–≤–µ—Ü—å: –í–Ü–ù–õ–Ü</p>
                            </div>
                            <div class="item-quantity-controls">
                                <button class="quantity-btn minus" data-id="${item.id}">-</button>
                                <input type="number" value="${item.quantity}" min="1" class="quantity-input" data-id="${item.id}">
                                <button class="quantity-btn plus" data-id="${item.id}">+</button>
                            </div>
                            <div class="item-price-info">
                                <span class="current-price">${(item.price * item.quantity).toLocaleString('uk-UA')} ‚Ç¥</span>
                                <button class="more-options" data-id="${item.id}">‚ãÆ</button>
                            </div>
                        </div>
                    `;
                    itemContainer.innerHTML += itemHtml;
                    totalCartPrice += (item.price * item.quantity);
                });

                // –û–Ω–æ–≤–ª—é—î–º–æ –∑–∞–≥–∞–ª—å–Ω—É —Ü—ñ–Ω—É
                const totalPriceElement = modalContent.querySelector('.total-price-text');
                if (totalPriceElement) {
                    totalPriceElement.textContent = `${totalCartPrice.toLocaleString('uk-UA')} ‚Ç¥`;
                }

                cartOverlay.innerHTML = '';
                cartOverlay.appendChild(modalContent);

                cartOverlay.classList.add('active');
                document.body.style.overflow = 'hidden';

                setupQuantityControls();
                setupCarousel();
                setupRemoveItemButtons(); // –ù–æ–≤–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –∫–Ω–æ–ø–æ–∫ –≤–∏–¥–∞–ª–µ–Ω–Ω—è
            })
            .catch(error => console.error("–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–æ—à–∏–∫–∞:", error));
    }
}


// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–∫—Ä–∏—Ç—Ç—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞ –∫–æ—à–∏–∫–∞
function closeCartModal() {
    if (cartOverlay) {
        cartOverlay.classList.remove('active'); // –ü—Ä–∏—Ö–æ–≤—É—î–º–æ –æ–≤–µ—Ä–ª–µ–π
        document.body.style.overflow = ''; // –î–æ–∑–≤–æ–ª—è—î–º–æ –ø—Ä–æ–∫—Ä—É—Ç–∫—É –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –≤–º—ñ—Å—Ç—É
        setTimeout(() => {
            if (cartOverlay) {
                cartOverlay.innerHTML = ''; // –û—á–∏—â–∞—î–º–æ –≤–º—ñ—Å—Ç –¥–ª—è –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è
            }
        }, 300); // 300ms –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î —Ç—Ä–∏–≤–∞–ª–æ—Å—Ç—ñ transition –≤ CSS
    }
}

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∫–Ω–æ–ø–æ–∫ –∑–º—ñ–Ω–∏ –∫—ñ–ª—å–∫–æ—Å—Ç—ñ
function setupQuantityControls() {
    const quantityInputs = document.querySelectorAll('.cart-modal .quantity-input');
    quantityInputs.forEach(input => {
        const itemId = input.dataset.id;
        const minusBtn = input.previousElementSibling; // Button '-'
        const plusBtn = input.nextElementSibling;     // Button '+'

        if (minusBtn && plusBtn) {
            minusBtn.onclick = () => {
                let currentValue = parseInt(input.value);
                if (currentValue > 1) {
                    input.value = currentValue - 1;
                    updateCartItemQuantity(itemId, -1);
                } else if (currentValue === 1) {
                    // –Ø–∫—â–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Å—Ç–∞—î 1 —ñ –Ω–∞—Ç–∏—Å–∫–∞—î–º–æ '-', –∑–∞–ø–∏—Ç—É—î–º–æ –≤–∏–¥–∞–ª–µ–Ω–Ω—è
                    if (confirm('–í–∏ –¥—ñ–π—Å–Ω–æ —Ö–æ—á–µ—Ç–µ –≤–∏–¥–∞–ª–∏—Ç–∏ —Ü–µ–π —Ç–æ–≤–∞—Ä –∑ –∫–æ—à–∏–∫–∞?')) {
                        updateCartItemQuantity(itemId, -1, true); // –ü–µ—Ä–µ–¥–∞—î–º–æ true, —â–æ–± –≤–∏–¥–∞–ª–∏—Ç–∏ —Ç–æ–≤–∞—Ä
                    }
                }
            };

            plusBtn.onclick = () => {
                let currentValue = parseInt(input.value);
                input.value = currentValue + 1;
                updateCartItemQuantity(itemId, 1);
            };

            // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –≤–≤–µ–¥–µ–Ω–Ω—è
            input.onchange = () => {
                let newValue = parseInt(input.value);
                if (isNaN(newValue) || newValue < 1) {
                    input.value = 1;
                    newValue = 1;
                }
                const currentStoredQuantity = cartItems.find(item => item.id === itemId)?.quantity || 0;
                const change = newValue - currentStoredQuantity;
                if (change !== 0) { // –û–Ω–æ–≤–ª—é—î–º–æ –ª–∏—à–µ —è–∫—â–æ —î –∑–º—ñ–Ω–∞
                    updateCartItemQuantity(itemId, change, true); // –ü–µ—Ä–µ–¥–∞—î–º–æ true, –±–æ —Ü–µ –∞–±—Å–æ–ª—é—Ç–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è
                }
            };
        }
    });
}

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∫—ñ–ª—å–∫–æ—Å—Ç—ñ —Ç–æ–≤–∞—Ä—É –≤ cartItems
function updateCartItemQuantity(itemId, change, isAbsolute = false) {
    const itemIndex = cartItems.findIndex(item => item.id === itemId);
    if (itemIndex > -1) {
        if (isAbsolute) {
            cartItems[itemIndex].quantity = change;
        } else {
            cartItems[itemIndex].quantity += change;
        }

        // –Ø–∫—â–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Å—Ç–∞–ª–∞ 0 –∞–±–æ –º–µ–Ω—à–µ, –≤–∏–¥–∞–ª—è—î–º–æ —Ç–æ–≤–∞—Ä –∑ –∫–æ—à–∏–∫–∞
        if (cartItems[itemIndex].quantity <= 0) {
            cartItems.splice(itemIndex, 1);
        }
        // –ü—ñ—Å–ª—è –±—É–¥—å-—è–∫–æ—ó –∑–º—ñ–Ω–∏ –∫—ñ–ª—å–∫–æ—Å—Ç—ñ, –∑–∞–Ω–æ–≤–æ –≤—ñ–¥–∫—Ä–∏–≤–∞—î–º–æ –∫–æ—à–∏–∫, —â–æ–± –æ–Ω–æ–≤–∏—Ç–∏ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        openCartModal();
    }
}

// –ù–æ–≤–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –∫–Ω–æ–ø–∫–∏ "–ë—ñ–ª—å—à–µ –æ–ø—Ü—ñ–π" (–≤–∏–¥–∞–ª–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—É)
function setupRemoveItemButtons() {
    const moreOptionsButtons = document.querySelectorAll('.cart-item .more-options');
    moreOptionsButtons.forEach(button => {
        button.addEventListener('click', (event) => {
            const itemId = event.target.dataset.id;
            if (confirm('–í–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ, —â–æ —Ö–æ—á–µ—Ç–µ –≤–∏–¥–∞–ª–∏—Ç–∏ —Ü–µ–π —Ç–æ–≤–∞—Ä –∑ –∫–æ—à–∏–∫–∞?')) {
                removeItemFromCart(itemId);
            }
        });
    });
}

// –ù–æ–≤–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—É –∑ –∫–æ—à–∏–∫–∞
function removeItemFromCart(itemId) {
    cartItems = cartItems.filter(item => item.id !== itemId);
    openCartModal(); // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∫–æ—à–∏–∫–∞
}


// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∫–∞—Ä—É—Å–µ–ª—ñ "–©–µ –±–µ—Ä—É—Ç—å –¥–æ —Ç–æ–≤–∞—Ä—É"
function setupCarousel() {
    const carousel = document.querySelector('.cart-modal .also-buy-items');
    const leftArrow = document.querySelector('.cart-modal .carousel-arrow.left-arrow');
    const rightArrow = document.querySelector('.cart-modal .carousel-arrow.right-arrow');
    const dotsContainer = document.querySelector('.cart-modal .carousel-dots');

    if (!carousel || !leftArrow || !rightArrow || !dotsContainer) {
        return; // –í–∏—Ö–æ–¥–∏–º–æ, —è–∫—â–æ –µ–ª–µ–º–µ–Ω—Ç–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω—ñ
    }

    const scrollAmount = 200; // –ù–∞ —Å–∫—ñ–ª—å–∫–∏ –ø—ñ–∫—Å–µ–ª—ñ–≤ –ø—Ä–æ–∫—Ä—É—á—É–≤–∞—Ç–∏

    leftArrow.addEventListener('click', () => {
        carousel.scrollBy({
            left: -scrollAmount,
            behavior: 'smooth'
        });
    });

    rightArrow.addEventListener('click', () => {
        carousel.scrollBy({
            left: scrollAmount,
            behavior: 'smooth'
        });
    });

    // –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–æ—á–æ–∫ (—ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä—ñ–≤) –∫–∞—Ä—É—Å–µ–ª—ñ
    // –ó–∞—É–≤–∞–∂—Ç–µ: —è–∫—â–æ —É –≤–∞—Å —î –ø–ª—é—Å–∏ –º—ñ–∂ –µ–ª–µ–º–µ–Ω—Ç–∞–º–∏, —ó—Ö –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤—Ä–∞—Ö–æ–≤—É–≤–∞—Ç–∏ –ø—Ä–∏ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É —Å–ª–∞–π–¥—ñ–≤
    const itemsInCarousel = Array.from(carousel.children).filter(el => el.classList.contains('also-buy-item'));
    const totalSlides = itemsInCarousel.length;
    dotsContainer.innerHTML = ''; // –û—á–∏—â–∞—î–º–æ —ñ—Å–Ω—É—é—á—ñ —Ç–æ—á–∫–∏

    for (let i = 0; i < totalSlides; i++) {
        const dot = document.createElement('span');
        dot.classList.add('dot');
        if (i === 0) {
            dot.classList.add('active');
        }
        dot.addEventListener('click', () => {
            // –û—Å–∫—ñ–ª—å–∫–∏ —É –Ω–∞—Å —î "+" –∑–Ω–∞–∫–∏, –∫—Ä–∞—â–µ –æ—Ä—ñ—î–Ω—Ç—É–≤–∞—Ç–∏—Å—è –Ω–∞ –∑–º—ñ—â–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤
            // –ö–æ–∂–µ–Ω "also-buy-item" –º–∞—î —à–∏—Ä–∏–Ω—É + gap.
            const item = itemsInCarousel[i];
            if (item) {
                const itemOffsetLeft = item.offsetLeft;
                carousel.scrollTo({
                    left: itemOffsetLeft - carousel.offsetLeft, // –í–∏–ø—Ä–∞–≤–ª–µ–Ω–∏–π —Ä–æ–∑—Ä–∞—Ö—É–Ω–æ–∫
                    behavior: 'smooth'
                });
                updateDots(i);
            }
        });
        dotsContainer.appendChild(dot);
    }

    // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∞–∫—Ç–∏–≤–Ω–æ—ó —Ç–æ—á–∫–∏
    function updateDots(activeDotIndex = -1) {
        const dots = dotsContainer.querySelectorAll('.dot');
        let currentIndex = activeDotIndex;

        if (activeDotIndex === -1) { // –Ø–∫—â–æ –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∏–π —ñ–Ω–¥–µ–∫—Å (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, –ø—Ä–∏ —Å–∫—Ä–æ–ª—ñ)
            if (itemsInCarousel.length > 0) {
                const firstItem = itemsInCarousel[0];
                const itemWidth = firstItem.offsetWidth;
                // –ü—Ä–∏–ø—É—Å—Ç–∏–º–æ, —â–æ gap = 20px, —è–∫ —É –≤–∞—à–æ–º—É CSS –¥–ª—è .product-details .gap
                // –ó–∞—É–≤–∞–∂—Ç–µ: —Ç–∞–∫–æ–∂ —î span.plus-sign, —â–æ –¥–æ–¥–∞—î —à–∏—Ä–∏–Ω—É
                // –ù–∞–π–∫—Ä–∞—â–µ –±—É–ª–æ –± –∑–∞–º—ñ—Ä—è—Ç–∏ scrollWidth —Ç–∞ clientWidth —Ç–∞ —Ä–æ–∑—Ä–∞—Ö–æ–≤—É–≤–∞—Ç–∏
                // –ê–±–æ –ø—Ä–æ—Å—Ç—ñ—à–µ: –æ—Ä—ñ—î–Ω—Ç—É–≤–∞—Ç–∏—Å—è –Ω–∞ —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω–∏–π –µ–ª–µ–º–µ–Ω—Ç —É viewport
                const centerScroll = carousel.scrollLeft + (carousel.clientWidth / 2);
                for (let i = 0; i < itemsInCarousel.length; i++) {
                    const item = itemsInCarousel[i];
                    if (centerScroll >= item.offsetLeft && centerScroll < (item.offsetLeft + item.offsetWidth + 20)) { // 20px - –ø—Ä–∏–±–ª–∏–∑–Ω–∏–π gap + plus-sign
                        currentIndex = i;
                        break;
                    }
                }
            }
        }

        dots.forEach((dot, index) => {
            if (index === currentIndex) {
                dot.classList.add('active');
            } else {
                dot.classList.remove('active');
            }
        });
    }

    carousel.addEventListener('scroll', () => {
        // –ó–∞—Ç—Ä–∏–º–∫–∞ –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–æ—á–æ–∫, —â–æ–± —É–Ω–∏–∫–Ω—É—Ç–∏ —á–∞—Å—Ç–æ–≥–æ —Å–ø—Ä–∞—Ü—å–æ–≤—É–≤–∞–Ω–Ω—è –ø—ñ–¥ —á–∞—Å —Å–∫—Ä–æ–ª—É
        clearTimeout(carousel.scrollTimeout);
        carousel.scrollTimeout = setTimeout(updateDots, 100);
    });

    updateDots(); // –í–∏–∫–ª–∏–∫–∞—î–º–æ –ø—Ä–∏ –ø–µ—Ä—à–æ–º—É –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ –¥–ª—è –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∞–∫—Ç–∏–≤–Ω–æ—ó —Ç–æ—á–∫–∏
}